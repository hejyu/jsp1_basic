<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="tblcustom">
 	<!-- SQL 매퍼, 실행할 SQL 만 모아놓은 파일 
 		1) DML INSERT, UPDATE, DELETE, SELECT 와 동일한 태그에 작성하기
 		2) DAO 메소드에서 지정했던 메소드의 인자, 리턴타입 정하기
 			주의 : 자바 객체의 변수(속성)명과 파라미터 이름을 동일하게 해야합니다
 				파라미터가 Map 일 때는 key 이름과 파라미터 이름을 동일하게 합니다.
 				기본 형식, String 은 변수 선언 키워드와 동일하게 합니다.
 		3) dto(또는 vo) 클래스는 커스텀 생성자를 사용하고, 컬럼명과 변수명 순서를 같게 합니다.
 		4) namespace, id 속성값은 개발자가 정합니다
 	 -->
 	<select id="selectAll" resultType="CustomerDto">
 		SELECT custom_id, name, email, age, reg_date
 		FROM tbl_custom 
 		ORDER BY reg_date desc
  	</select>
 	
 	<insert id="insert" parameterType="CustomerDto">
 		insert into tbl_custom(custom_id, name, email, age, reg_date) values(#{},#{},#{},#{},sysdate)
 	</insert>
 	
 	<update id="update" parameterType="java.util.Map">
 		update tbl_buy
 			set quantity = #{quantity}
 			where buy_idx = #{buy_idx}
 	</update>
 	
 	<delete id="delete" parameterType="int">
 		delete from tbl_buy
 			where buy_idx = #{buy_idx}
 	</delete>
 	
 	<select id="selectBuyMyPage" parameterType="String" resultType="CustomerDto">
 			SELECT buy_idx, tb.pcode, pname, price, quantity, buy_date
            FROM TBL_BUY tb
            	JOIN TBL_PRODUCT tp
                ON tb.PCODE  = tp.PCODE 
            WHERE tb.CUSTOMID = #{custom_id}
            ORDER BY BUY_DATE desc
 	</select>
 	
 	<select id="selectBuyByCustomid" parameterType="String" resultType="CustomerDto">
 			select custom_id, name, email, age, reg_date
 			from tbl_custom 
 			where custom_id= #{customid}
 	</select>
 	
 	
 </mapper>
 
 